---
title: "Funciones"
author: "Alex Dannis Lipa Quispe"
---

En pocas palabras las funciones consiste en dividir tareas para que este más legible y como buena práctica de programación es fundamental aprendertela y para ello veremos una structura básica:

```{=latex}
\begin{tcolorbox}[custombox]
\begin{verbatim}
En el tipo de la función, si se requiere retornar un tipo de valor en espesífico 
puedes
usar (int, float, bool) que son las más comunes.

Existen funciones que no retornan nada y el más comun es el "void".

La manera en la que creamos la funcion puede y no puede tener valores es decir:
int sumar(int n, int m) //En este caso la función recebe dos parámetros de tipo 
                        //entero.
void pedir() // Y en esta otra la función no recibe parámetros.
\end{verbatim}
\end{tcolorbox}
```

Si te diste cuenta en este libro mayormente verás que usaremos mayormente la función de tipo `void` para pedir datos en nuestro programas, y cualquier otro tipo de función para realizar una tarea en específica, recuerda que en los parámetros puede ir el nombre que tu quieras, pero ten un cuenta que debes de espesificar muy bien el tipo de valor que tomará. Un aspecto de buena práctica es prototipar la función y despues de la función principal que es el **main** realizamos el código que realizará esa función en espesífica. Vamos a realizar un programa que retorme la suma de numeros enteros.

``` cpp
#include <iostream>
using namespace std;

int suma(int, int); // este será nuestro prototipo de nueestra función 

int main(){
    int num1, num2;
    int resultado; // como la funcion retorna un valor, ese valor lo guardamos en
                  // esta variables.
    cout << "Digite el primer numero: ";
    cin >> num1;
    cout << "Digite el segundo numero: ";
    cin >> num2;
    
    resultado = suma(num1, num2); // llamamos a la funcion poniendo el nombre de la 
                                  // funcion seguida de los dos parámetros.
    cout << "El resultado es: "<<resultado<<endl; // finalmente lo imrpimimos
    return 0;
}
//realizamos el cuerpo de la funcion.
int suma(int a, int b){ // a y b son variables.
    int resultado;
    resultado = a + b;
    return resultado;   // la palabra "return" es como decir vota el resultado.
}
```

El programa es básico que lo que hace es una simple suma, pero para programas más grandes en fundamental hacerlo con funciones y en todo caso es necesario que lo aprendas como una buena práctica.

## Paso de Parámetros

Para pasar arreglos, matrices, cadenas de texto se requiere de otro tipo de parámetros de que son:

```{=latex}
\begin{tcolorbox}[custombox]
\begin{verbatim}
int arreglo(int a[], int tamanio);
//El a[] es para pasar el arreglo y para saber la cantidad ponemos el "tamanio".

int matriz(int a[][100], int filas, int columnas);
//En este caso en necesario poner el tamaño máximo de columnas, seguida del total
// de filas y columnas

int cadenas(string nombre);
// para mandar de parámetro cadenas de texto.

int caracteres(char n);
//para poder mandar vocales y carácteres únicos.
\end{verbatim}
\end{tcolorbox}
```

Como ves estas son los parámetros que debes de aprender, pero para serlo más interesante vamos a crear un programa que haga la acción de una serie de opciones, lo vamos a realizar solo con funciones para que asi retroalimentes más tu conocimiento. Las opciones que habran en el `MENU` seran las siguientes:

```{=latex}
\begin{tcolorbox}
\begin{verbatim}
------------->MENU<-------------
1. OPERACIONES ARITMÉTICAS.
2. OPERACIONES CON ARREGLOS.
3. OPERACIONES CON MATRICES.
4. JUEGO DE "ADIVINA EL NUMERO".
5. SALIR.
\end{verbatim}
\end{tcolorbox}
```

Cabe racalacar que cada tema será de una manera casi profesional, porque también tengo mucho que aprender, pero por el motivo por el cual hago esto es para que no tengas complicaciones futuras y que lo entiendas de la mejor manera. haciendo esto aprenderas conceptos fundamentales.

## Programa N°1

Para poder realizar este programa es fundamental retroceder y ver los temas anteriores de manera detenida para que luego se te haga fácil entender este pequeño programa.
